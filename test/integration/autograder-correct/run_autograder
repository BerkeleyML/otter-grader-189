#!/usr/bin/env python3

from otter.grade import grade_notebook
from glob import glob
import json
import os
import shutil
import subprocess
import re

UTILS_IMPORT_REGEX = r"\"from utils import [\w\*, ]+"
NOTEBOOK_INSTANCE_REGEX = r"otter.Notebook\(.+\)"

if __name__ == "__main__":
	# put files into submission directory
	if os.path.exists("/autograder/source/files"):
		for filename in glob("/autograder/source/files/*.*"):
			shutil.copy(filename, "/autograder/submission")

	# create __init__.py files
	subprocess.run(["touch", "/autograder/__init__.py"])
	subprocess.run(["touch", "/autograder/submission/__init__.py"])

	os.chdir("/autograder/submission")
	nb_path = glob("*.ipynb")[0]

	# fix utils import
	try:
		with open(nb_path) as f:
			contents = f.read()
	except UnicodeDecodeError:
		with open(nb_path, "r", encoding="utf-8") as f:
			contents = f.read()

	contents = re.sub(UTILS_IMPORT_REGEX, "\"from .utils import *", contents)
	contents = re.sub(NOTEBOOK_INSTANCE_REGEX, "otter.Notebook()", contents)

	try:
		with open(nb_path, "w") as f:
			f.write(contents)
	except UnicodeEncodeError:
		with open(nb_path, "w", encoding="utf-8") as f:
			f.write(contents)

	try:
		os.mkdir("/autograder/submission/tests")
	except FileExistsError:
		pass
		
	tests_glob = glob("/autograder/source/tests/*.py")
	for file in tests_glob:
		shutil.copy(file, "/autograder/submission/tests")

	scores = grade_notebook(nb_path, tests_glob, name="submission", ignore_errors=True)
	print(scores)

	output = {"tests" : []}
	for key in scores:
		if key != "total" and key != "TEST_HINTS" and key != "possible":
			output["tests"] += [{
				"score" : scores[key],
				"number" : key
			}]
	output["visibility"] = "hidden"

	with open("/autograder/results/results.json", "w+") as f:
		json.dump(output, f)
